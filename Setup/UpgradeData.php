<?php
namespace Mdoq\Connector\Setup;

use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\Setup\ModuleDataSetupInterface;
use Magento\Framework\Setup\UpgradeDataInterface;

class UpgradeData implements UpgradeDataInterface
{
    public function upgrade(ModuleDataSetupInterface $setup, ModuleContextInterface $context)
    {
    	$setup->startSetup();
    	
    	if (version_compare($context->getVersion(), '1.1.1', '<')) {
            $this->upgrade1_1_1($setup, $context);
        }
        
    	$setup->endSetup();
    }
    
    protected function upgrade1_1_1(ModuleDataSetupInterface $setup, ModuleContextInterface $context)
    {
    	// move gateway settings across
    	$setup->getConnection()->query('UPDATE core_config_data set path = \'mdoq_connector/connector/enable\' where path = \'zero1_gateway/gateway/enable\'');
    	$setup->getConnection()->query('UPDATE core_config_data set path = \'mdoq_connector/connector/url_key\' where path = \'zero1_gateway/gateway/url_key\'');
    	
    	// update the path for the url_rewrite
    	$count = $setup->getConnection()->fetchCol('SELECT count(*) FROM url_rewrite WHERE target_path  = \'zero1-gateway/index/index\';');
        $count = (int)reset($count);
        if($count > 0){
        	// there are already key(s) in place
        	// first update for the new path
        	$setup->getConnection()->query('UPDATE url_rewrite set target_path = \'mdoq-connector/index/index\' where target_path = \'zero1-gateway/index/index\'');
        	
        	$storeIds = $setup->getConnection()->fetchCol('select store_id from store where code != \'admin\';');
        	
        	// now update/create for all keys for each store
        	$currentRewrites = $setup->getConnection()->fetchAssoc('SELECT * FROM url_rewrite WHERE target_path = \'mdoq-connector/index/index\';');
        	foreach($currentRewrites as $rewrite){
        		foreach($storeIds as $storeId){
                    $newRewrite = $rewrite;
                    unset($newRewrite['url_rewrite_id']);
                    unset($newRewrite['metadata']);
                    $newRewrite['store_id'] = $storeId;
        			try{
                        $setup->getConnection()->query('insert into url_rewrite (entity_type, entity_id, request_path, target_path, redirect_type, store_id, description, is_autogenerated) '.
                                                        'values (:entity_type, :entity_id, :request_path, :target_path, :redirect_type, :store_id, :description, :is_autogenerated)', $newRewrite);
                    }catch(\Exception $e){
                        //echo $e->getMessage().PHP_EOL;
                    }
        		}
        	}
        }
    }
}
